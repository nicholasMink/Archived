Nick Mink Cosc2325-001
+--------------------+--------------+----------------------+-------------------------+----------------+
| DATA TYPE          | SIZE         | MIN VALUE    	   | MAX VALUE               | encoding       |
+--------------------+--------------+----------------------+-------------------------+----------------+
| int                | 32 bits      | -2147483648  	   | 2147483647   	     | 2'S compliment |
+--------------------+--------------+----------------------+-------------------------+----------------+
| unsigned int       | 32 bits      | 0            	   | 4294967295   	     | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| char               | 8 bits       | -128         	   | 127                     | UTF-16	      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| unsigned char      | 8 bits       | 0            	   | 255                     |		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| short int          | 16 bits      | -32768       	   | 32767                   | 2'S compliment |
+--------------------+--------------+----------------------+-------------------------+----------------+
| unsigned short int | 16 bits      | 0            	   | 65535                   | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| long int           | 32 bits      | -2147483648  	   | 2147483647              | 2'S compliment |
+--------------------+--------------+----------------------+-------------------------+----------------+
| unsigned long int  | 32 bits      | 0                    | 4294967295              | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| float              | 32 bits      | 1.17549*10*-38       | 3.40282*10^38           | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| double             | 64 bits      | 2.22507*10^-308      | 1.79769*10^308          | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
| long double        | 96 bits      | 3.36210*10^-4932     | 1.18973*10^4932         | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+
|long long	     | 64 bits      | -9223372036854775808 | 9223372036854775808     | 2'S compliment |
+--------------------+--------------+----------------------+-------------------------+----------------+
|unsigned long long  | 64 bits      | 0                    | 18446744073709551615    | 1's compliment |
+--------------------+--------------+----------------------+-------------------------+----------------+
|bool                | 8 bits       | false                | true                    | 		      |
+--------------------+--------------+----------------------+-------------------------+----------------+

http://www.gnu.org/software/gnu-c-manual/gnu-c-manual.html#Data-Types
http://www.tutorialspoint.com/ansi_c/c_basic_datatypes.htm
^
|  Provided data but more importantly provided instruction
|  on how to obtain myself from a specific compiler.

int
main()
{
  printf("sizeof(char) == %d\n", sizeof(char));
  printf("sizeof(short) == %d\n", sizeof(short));
  printf("sizeof(int) == %d\n", sizeof(int));
  printf("sizeof(long) == %d\n", sizeof(long));
  printf("sizeof(float) == %d\n", sizeof(float));
  printf("sizeof(double) == %d\n", sizeof(double));
  printf("sizeof(long double) == %d\n", sizeof(long double));
  printf("sizeof(long long) == %d\n", sizeof(long long));

  return 0;
}
